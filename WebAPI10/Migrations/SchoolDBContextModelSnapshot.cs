// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI10.Data;

namespace WebAPI10.Migrations
{
    [DbContext(typeof(SchoolDBContext))]
    partial class SchoolDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI10.Models.AllocateSubjectDetail", b =>
                {
                    b.Property<int>("allocateSubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("subjectID")
                        .HasColumnType("int");

                    b.Property<int>("teacherID")
                        .HasColumnType("int");

                    b.HasKey("allocateSubjectID");

                    b.HasIndex("subjectID");

                    b.HasIndex("teacherID");

                    b.ToTable("AllocateSubjectDetail");
                });

            modelBuilder.Entity("WebAPI10.Models.AllocatedClassroomDetail", b =>
                {
                    b.Property<int>("allocateClassroomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("classroomID")
                        .HasColumnType("int");

                    b.Property<int>("teacherID")
                        .HasColumnType("int");

                    b.HasKey("allocateClassroomID");

                    b.HasIndex("classroomID");

                    b.HasIndex("teacherID");

                    b.ToTable("AllocatedClassroomDetails");
                });

            modelBuilder.Entity("WebAPI10.Models.ClassRoom", b =>
                {
                    b.Property<int>("classroomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("classroomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("classroomID");

                    b.ToTable("classRoom");
                });

            modelBuilder.Entity("WebAPI10.Models.Student", b =>
                {
                    b.Property<int>("studentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("contactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("dateOfbirth")
                        .HasColumnType("date");

                    b.Property<string>("emailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(12);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("studentID");

                    b.ToTable("student");
                });

            modelBuilder.Entity("WebAPI10.Models.StudentClassRoomDetail", b =>
                {
                    b.Property<int>("studentClassRoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("classroomID")
                        .HasColumnType("int");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.HasKey("studentClassRoomID");

                    b.HasIndex("classroomID");

                    b.HasIndex("studentID");

                    b.ToTable("StudentClassRoomDetail");
                });

            modelBuilder.Entity("WebAPI10.Models.Subject", b =>
                {
                    b.Property<int>("subjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("subjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("subjectID");

                    b.ToTable("subject");
                });

            modelBuilder.Entity("WebAPI10.Models.Teacher", b =>
                {
                    b.Property<int>("teacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("emailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("teacherID");

                    b.ToTable("teacher");
                });

            modelBuilder.Entity("WebAPI10.Models.AllocateSubjectDetail", b =>
                {
                    b.HasOne("WebAPI10.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("subjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI10.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("teacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI10.Models.AllocatedClassroomDetail", b =>
                {
                    b.HasOne("WebAPI10.Models.ClassRoom", "ClassRoom")
                        .WithMany()
                        .HasForeignKey("classroomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI10.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("teacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI10.Models.StudentClassRoomDetail", b =>
                {
                    b.HasOne("WebAPI10.Models.ClassRoom", "ClassRoom")
                        .WithMany()
                        .HasForeignKey("classroomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI10.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
